git --version 
git config --global user.name "uditmeharwal"
git config --global user.email uditmeharwal2@gmail.com
git config --list 
git init  
git status
git add .
git commit -m "first commit"
git log 
git diff


git show 7c2cdc2b89b4619b42917f032c7cfab76207f37f:github  = show commit file in terminal  (git show commitid : file name)

git checkout 7c2cdc2b89b4619b42917f032c7cfab76207f37f --* = show commit file in different file (git checkout commitid -- file name)
git checkout master . = restore to lastest commit

git restore . = restore to lastest commit

git diff --cached = difference between staged and last commit

git restore --staged . = the file which is staged and not commmited will restore to last commit 
git restore --worktree . = the file which is not staged will restore to last commit

git reset --soft HEAD^ .= if we commit any file by mistake then we can use this command to uncommit the file but the chages are on screen 
git reset --hard HEAD^ .= if we commit any file by mistake then we can use this command to uncommit the file but the chages will remove 

git logs management and handling ----
git log -p-2 = show last 2 commit with changes
git log --stat = show commit with file name and changes
git log --oneline = show commit in single line

remote repository ----
git remote add origin https://github.com/uditmeharwal/sample.git
git branch -M main 
git push -u origin main

git remote -v = show remote url
git remote remove origin = remove remote url
git push = push changes to remote repository
git pull = fetch + merge
git clone


branching and merging ----
git branch = show all branches
git branch new_branch_name = create new branch
git checkout new_branch_name = switch to branch
git merge new_branch_name = merge new_branch_name to current branch
git push origin branch_name = push branch to remote repository

merge conflict ----if same file is changed in both branches then it will create merge conflict

git forking and pull request ----
forking = copy of repository
pull request = request to merge your changes to original repository

gitignore file ----
create a file named .gitignore in root directory and add the file or folder name which you
    notupload.txt
    *.logs

    git tags
    git tag -a tag_name commit_id
    git tag -a tagname -m "my first tag" commit_id
    git show tag_name
    git push origin --tags
 